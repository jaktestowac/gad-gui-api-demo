import serverManager from './helpers/server-manager.js'

// Handle graceful shutdown when the process exits
process.on('exit', async () => {
  console.log('üßπ Process exit: Stopping server...')
  try {
    await serverManager.stopServer()
    console.log('‚úÖ Process exit: Server stopped')
  } catch (error) {
    console.error('‚ùå Process exit: Failed to stop server:', error.message)
  }
})

// Handle SIGINT (Ctrl+C)
process.on('SIGINT', async () => {
  console.log('üßπ SIGINT received: Stopping server...')
  try {
    await serverManager.stopServer()
    console.log('‚úÖ SIGINT: Server stopped')
    process.exit(0)
  } catch (error) {
    console.error('‚ùå SIGINT: Failed to stop server:', error.message)
    process.exit(1)
  }
})

// Handle SIGTERM
process.on('SIGTERM', async () => {
  console.log('üßπ SIGTERM received: Stopping server...')
  try {
    await serverManager.stopServer()
    console.log('‚úÖ SIGTERM: Server stopped')
    process.exit(0)
  } catch (error) {
    console.error('‚ùå SIGTERM: Failed to stop server:', error.message)
    process.exit(1)
  }
})

export default serverManager 