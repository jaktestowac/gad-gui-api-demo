{
  "openapi": "3.0.0",
  "info": {
    "title": "Weather App API",
    "description": "API for the Weather App practice module",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api/practice/v1/weather",
      "description": "Weather App API base URL"
    }
  ],
  "tags": [
    {
      "name": "weather",
      "description": "Weather data endpoints"
    },
    {
      "name": "events",
      "description": "Weather events and notes"
    },
    {
      "name": "authentication",
      "description": "User authentication and session management"
    },
    {
      "name": "admin",
      "description": "Administrative endpoints (admin access required)"
    }
  ],
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "Weather": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date of the weather data"
          },
          "temp": {
            "type": "number",
            "description": "Temperature in Celsius"
          },
          "humidity": {
            "type": "number",
            "description": "Humidity percentage"
          },
          "wind": {
            "type": "object",
            "properties": {
              "speed": {
                "type": "number",
                "description": "Wind speed in km/h"
              },
              "direction": {
                "type": "string",
                "enum": ["N", "NE", "E", "SE", "S", "SW", "W", "NW"],
                "description": "Wind direction"
              }
            }
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the event (auto-incrementing)"
          },
          "day": {
            "type": "string",
            "format": "date",
            "description": "Date of the weather event"
          },
          "event": {
            "type": "string",
            "description": "Event description or note"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the user who created the event"
          },
          "username": {
            "type": "string",
            "description": "Username of the user who created the event"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "User ID"
          },
          "username": {
            "type": "string",
            "description": "Username"
          },
          "isAdmin": {
            "type": "boolean",
            "description": "Whether the user is an admin"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["username", "password"],
        "properties": {
          "username": {
            "type": "string",
            "description": "Username"
          },
          "password": {
            "type": "string",
            "description": "Password"
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "required": ["username", "password"],
        "properties": {
          "username": {
            "type": "string",
            "description": "Username (3-10 characters, only letters, numbers, and hyphens)",
            "pattern": "^[a-zA-Z0-9-]{3,10}$"
          },
          "password": {
            "type": "string",
            "description": "Password"
          },
          "isAdmin": {
            "type": "boolean",
            "description": "Whether to register as admin"
          }
        }
      },
      "AdminData": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "paths": {
    "/current": {
      "get": {
        "tags": ["weather"],
        "summary": "Get current weather",
        "description": "Get weather data for the current day",
        "responses": {
          "200": {
            "description": "Weather data for today",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Weather"
                }
              }
            }
          }
        }
      }
    },
    "/day": {
      "post": {
        "tags": ["weather"],
        "summary": "Get weather for specific day",
        "description": "Get weather data for a specific day",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["day"],
                "properties": {
                  "day": {
                    "type": "string",
                    "format": "date",
                    "description": "Day in YYYY-MM-DD format"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Weather data for the specified day",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Weather"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/event": {
      "get": {
        "tags": ["events"],
        "summary": "Get weather events",
        "description": "Get weather events for the current user, optionally filtered by day",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "day",
            "in": "query",
            "description": "Optional filter by day (YYYY-MM-DD)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of weather events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["events"],
        "summary": "Create a weather event",
        "description": "Create a new weather event or note",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["day", "event"],
                "properties": {
                  "day": {
                    "type": "string",
                    "format": "date",
                    "description": "Day in YYYY-MM-DD format"
                  },
                  "event": {
                    "type": "string",
                    "description": "Event description or note (3-256 characters)",
                    "minLength": 3,
                    "maxLength": 256
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created event",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["events"],
        "summary": "Update a weather event",
        "description": "Update an existing weather event or note",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "event"],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Event ID to update"
                  },
                  "event": {
                    "type": "string",
                    "description": "Updated event description or note (3-256 characters)",
                    "minLength": 3,
                    "maxLength": 256
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated event",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized or not owner",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/event/{id}": {
      "get": {
        "tags": ["events"],
        "summary": "Get a weather event by ID",
        "description": "Get details of a specific weather event by its ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the event to retrieve",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Weather event details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized or not owner",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["events"],
        "summary": "Delete a weather event",
        "description": "Delete an existing weather event by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the event to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "event": {
                      "$ref": "#/components/schemas/Event"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized or not owner",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["authentication"],
        "summary": "Register a new user",
        "description": "Create a new user account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Registration successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or username already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["authentication"],
        "summary": "Login",
        "description": "Authenticate a user and create a session",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            },
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "weatherAppSession=abc123; Path=/; HttpOnly; SameSite=Strict"
                }
              }
            }
          },
          "400": {
            "description": "Missing credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["authentication"],
        "summary": "Logout",
        "description": "End the user session",
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "weatherAppSession=; Path=/; Expires=Thu, 01 Jan 1970 00:00:00 GMT"
                }
              }
            }
          }
        }
      }
    },
    "/auth/current-user": {
      "get": {
        "tags": ["authentication"],
        "summary": "Get current user",
        "description": "Get information about the currently authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Current user information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/admin/data": {
      "get": {
        "tags": ["admin"],
        "summary": "Get admin data",
        "description": "Get all users and events data (admin only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Admin data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized or not admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  }
}
